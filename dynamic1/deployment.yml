apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose -f docker-compose.yml -o kubernetes.yml convert
      kompose.version: 1.20.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: dynamic1-backend
    name: dynamic1-backend
    namespace: scrape
  spec:
    ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
    selector:
      io.kompose.service: dynamic1-backend
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose -f docker-compose.yml -o kubernetes.yml convert
      kompose.version: 1.20.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: dynamic1-frontend
    name: dynamic1-frontend
    namespace: scrape
  spec:
    ports:
    - name: "8083"
      port: 8083
      targetPort: 80
    selector:
      io.kompose.service: dynamic1-frontend
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose -f docker-compose.yml -o kubernetes.yml convert
      kompose.version: 1.20.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: dynamic1-backend
    name: dynamic1-backend
    namespace: scrape
  spec:
    replicas: 1
    revisionHistoryLimit: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose -f docker-compose.yml -o kubernetes.yml convert
          kompose.version: 1.20.0 ()
        creationTimestamp: null
        labels:
          io.kompose.service: dynamic1-backend
      spec:
        containers:
        - env:
          - name: PGSQL_DATABASE
            value: scrape_dynamic1
          - name: PGSQL_HOST
            valueFrom:
              secretKeyRef:
                name: pgsql
                key: PGSQL_HOST
          - name: PGSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: pgsql
                key: PGSQL_PASSWORD
          - name: PGSQL_PORT
            valueFrom:
              secretKeyRef:
                name: pgsql
                key: PGSQL_PORT
          - name: PGSQL_USER
            valueFrom:
              secretKeyRef:
                name: pgsql
                key: PGSQL_USER
          image: germey/scrape-dynamic1-backend:${TAG}
          name: scrape-dynamic1-backend
          ports:
          - containerPort: 8000
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose -f docker-compose.yml -o kubernetes.yml convert
      kompose.version: 1.20.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: dynamic1-frontend
    name: dynamic1-frontend
    namespace: scrape
  spec:
    replicas: 1
    revisionHistoryLimit: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose -f docker-compose.yml -o kubernetes.yml convert
          kompose.version: 1.20.0 ()
        creationTimestamp: null
        labels:
          io.kompose.service: dynamic1-frontend
      spec:
        containers:
        - image: germey/scrape-dynamic1-frontend:${TAG}
          name: scrape-dynamic1-frontend
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
  status: {}
kind: List
metadata: {}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-dynamic1
  namespace: scrape
spec:
  rules:
    - host: dynamic1.scrape.cuiqingcai.com
      http:
        paths:
          - backend:
              serviceName: dynamic1-frontend
              servicePort: 80
            path: /