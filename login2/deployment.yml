apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose -f docker-compose.yml -o kubernetes.yml convert
      kompose.version: 1.20.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: login2-frontend
    name: login2-frontend
    namespace: scrape
  spec:
    ports:
    - name: "8080"
      port: 8080
      targetPort: 80
    selector:
      io.kompose.service: login2-frontend
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose -f docker-compose.yml -o kubernetes.yml convert
      kompose.version: 1.20.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: login2-frontend
    name: login2-frontend
    namespace: scrape
  spec:
    replicas: 1
    revisionHistoryLimit: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose -f docker-compose.yml -o kubernetes.yml convert
          kompose.version: 1.20.0 ()
        creationTimestamp: null
        labels:
          io.kompose.service: login2-frontend
      spec:
        containers:
        - image: germey/scrape-login2-frontend:${TAG}
          name: scrape-login2-frontend
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
  status: {}
kind: List
metadata: {}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-login2
  namespace: scrape
spec:
  rules:
    - host: login2.scrape.cuiqingcai.com
      http:
        paths:
          - backend:
              serviceName: login2-frontend
              servicePort: 8080
            path: /